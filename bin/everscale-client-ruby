#!/usr/bin/env ruby

require File.dirname(__FILE__) + '/../lib/code_generator/api_converter.rb'
require File.dirname(__FILE__) + '/../lib/code_generator/code_generator.rb'
GEM_DIR = File.dirname(__FILE__) + '/..'

if ARGV[0] == 'update' && ARGV[1] == nil
  script_file_path = File.expand_path(File.dirname(__FILE__))
  `cd #{script_file_path}/.. && curl https://raw.githubusercontent.com/tonlabs/TON-SDK/master/tools/api.json > api.json`
  api_json_path = "#{script_file_path}/../api.json"
  json = ''
  if File.exist?(api_json_path)
    json = File.read(api_json_path)
  else
    p "File #{api_json_path} is not exist"
    exit 0
  end
  converter = ApiConverter.new(json)
  types = converter.convert
  generator = CodeGenerator.new(types, GEM_DIR)
  generator.generate_self_code
  system(%{bash -lc 'ruby #{script_file_path}/../lib/code_generator/release.rb'})
elsif ARGV[0] == 'update'
  api_json_path = ARGV[1]
  json = ''
  if File.exist?(api_json_path)
    json = File.read(api_json_path)
  else
    p "Current directory: #{Dir.pwd}. File #{api_json_path} is not exist"
    exit 0
  end
  converter = ApiConverter.new(json)
  types = converter.convert
  generator = CodeGenerator.new(types, GEM_DIR)
  generator.generate_self_code
  system(%{bash -lc 'ruby #{script_file_path}/../lib/code_generator/release.rb'})

elsif ARGV[0] == 'setup'
  raise "\nPLEASE INSTALL RUST TO YOUR SYSTEM. \nTry this command: \ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh" if `which rustc`.strip.empty?
  unless Dir.exist?("#{GEM_DIR}/TON-SDK")
    system("cd #{GEM_DIR} && git clone https://github.com/tonlabs/TON-SDK ./TON-SDK")
  end
  system("cd #{GEM_DIR}/TON-SDK && git reset --hard HEAD")
  system("cd #{GEM_DIR}/TON-SDK && git pull --ff-only")
  system("cd #{GEM_DIR}/TON-SDK && cargo update")
  system("cd #{GEM_DIR}/TON-SDK && cargo build --release")
  puts ''
  puts "PATH TO YOR DYNAMIC LIBRARY FOR MACOS IS: #{GEM_DIR}/TON-SDK/target/release/libton_client.dylib"
  puts "PATH TO YOR DYNAMIC LIBRARY FOR LINUX IS: #{GEM_DIR}/TON-SDK/target/release/libton_client.so"
  puts ''
end